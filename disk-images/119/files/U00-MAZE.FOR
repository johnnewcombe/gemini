	PROGRAM MAZE
C
C  PROGRAM TO GENERATE RANDOM MAZES (WITH UNIQUE SOLUTIONS)
C
C  ORIGINAL (BASIC): JACK HAUBER, LOOMIS SCHOOL, WINDSOR, CONNECTICUT
C  MODIFIED (BASIC): D J LEIGH - DECEMBER 1976
C  REWRITTEN (FORTRAN): M S OAKES - AUGUST 1982
C
	INTEGER*1  I,ILIM,J,JLIM,JSTART
	INTEGER*1  CASE,CHOICE,WAYS
	INTEGER*1  WALLS(25,25)
C
	INTEGER*2  COUNT,SIZE
C
	LOGICAL*1  LEFT,RIGHT,UP,DOWN,EXIT
	LOGICAL*1  OK
	LOGICAL*1  BEENTO(25,25)
C
	DIMENSION  ROW(25)
C
C  PATTERNS FOR PRINTING MAZE
C
	DATA  PATRN1,PATRN2/'--:','  :'/
	DATA  PATRN3,PATRN4/'   ','  I'/
C
C  STATEMENT FUNCTIONS
C
C  INPUT VALIDATION
	OK(WAYS) = (1.LE.WAYS) .AND. (WAYS.LE.25)
C  RANDOM MULTI-WAY BRANCH GENERATOR
	CHOICE(WAYS) = 1 + INT(WAYS * RANDOM(0))
C
C  START OF EXECUTION
C
  150	WRITE(1,9050)
9050	FORMAT( /
     1  ' THIS PROGRAM WILL PRINT OUT A DIFFERENT MAZE EVERY TIME IT'/
     1  ' IS RUN AND GUARANTEES ONLY ONE PATH THROUGH.  YOU CAN'/
     1  ' CHOOSE THE DIMENSIONS OF THE MAZE, I.E. THE NUMBER OF'/
     1  ' SQUARES LONG AND THE NUMBER OF SQUARES WIDE. '/
     1  ' A 25 BY 25 MAZE IS THE MAXIMUM, AND ANY DIMENSIONS UP TO'/
     1  ' THESE LIMITS ARE O.K.'/)
	WRITE(1,9060)
9060	FORMAT(' LENGTH: ')
	READ(1,8000) ILIM
8000	FORMAT(I2)
	WRITE(1,9070)
9070	FORMAT(' WIDTH: ')
	READ(1,8000) JLIM
	IF (OK(ILIM) .AND. OK(JLIM))  GOTO 250
	WRITE(1,9080)
9080	FORMAT(' MEANINGLESS DIMENSIONS  -  TRY AGAIN')
	GOTO 150
  250	WRITE(1,9090)
9090	FORMAT ( )
C
C  INITIALIZATION
C
	SIZE = ILIM * JLIM
	EXIT = .FALSE.
	DO 340 I = 1,ILIM
	DO 330 J = 1,JLIM
	BEENTO(I,J) = .FALSE.
	WALLS(I,J) = 0
  330	CONTINUE
  340	CONTINUE
C  PICK THE STARTING SQUARE
	JSTART = CHOICE(JLIM)
	DO 420 J = 1,JLIM
	IF (J.EQ.JSTART) GOTO 410
	ROW(J) = PATRN1
	GOTO 420
  410	ROW(J) = PATRN2
  420	CONTINUE
	WRITE(1,9100) PATRN2,(ROW(J),J=1,JLIM)
9100	FORMAT(A3,25A3)
C
	I = 1
	J = JSTART
	BEENTO(I,J) = .TRUE.
	COUNT = 1
C
C  START OF MAIN PROCESSING LOOP
C
  660	IF (COUNT.GE.SIZE) GOTO 2020
	LEFT = (J.GT.1) .AND. .NOT.BEENTO(I,J-1)
	RIGHT = (J.LT.JLIM) .AND. .NOT.BEENTO(I,J+1)
	UP = (I.GT.1) .AND. .NOT.BEENTO(I-1,J)
	DOWN = (I.LT.ILIM) .AND. .NOT.BEENTO(I+1,J) .OR.
     -         (I.EQ.ILIM) .AND. .NOT.EXIT
C
	IF (.NOT.LEFT) GOTO 1090
	IF (.NOT.UP) GOTO 860
	IF (.NOT.RIGHT) GOTO 750
C  GO LEFT OR UP OR RIGHT
	CASE = CHOICE(3)
	GOTO (1560,1630,1700), CASE
C  MUSN'T GO RIGHT
  750	IF (DOWN) GOTO 800
C  GO LEFT OR UP
	CASE = CHOICE(2)
	GOTO (1560,1630), CASE
C  GO LEFT OR UP OR DOWN
  800	CASE = CHOICE(3)
	GOTO (1560,1630,1800), CASE
C  MUSN'T GO UP
  860	IF (.NOT.RIGHT) GOTO 990
	IF (DOWN) GOTO 930
C  GO LEFT OR RIGHT
	CASE = CHOICE(2)
	GOTO (1560,1700), CASE
C  GO LEFT OR RIGHT OR DOWN
  930	CASE = CHOICE(3)
	GOTO (1560,1700,1800), CASE
C  MUSN'T GO UP OR RIGHT
  990	IF (.NOT.DOWN) GOTO 1560
C  GO LEFT OR DOWN
 	CASE = CHOICE(2)
	GOTO (1560,1800), CASE
C  MUSN'T GO LEFT
 1090	IF (.NOT.UP) GOTO 1340
	IF (.NOT.RIGHT) GOTO 1240
	IF (DOWN) GOTO 1180
C  GO UP OR RIGHT
	CASE = CHOICE(2)
	GOTO (1630,1700), CASE
C  GO UP OR RIGHT OR DOWN
 1180	CASE = CHOICE(3)
	GOTO (1630,1700,1800), CASE
C  MUSN'T GO LEFT OR RIGHT
 1240	IF (.NOT.DOWN) GOTO 1630
C  GO UP OR DOWN
	CASE = CHOICE(2)
	GOTO (1630,1800), CASE
C  MUSN'T GO LEFT OR UP
 1340	IF (.NOT.RIGHT) GOTO 1460
	IF (.NOT.DOWN) GOTO 1700
C  GO RIGHT OR DOWN
	CASE = CHOICE(2)
	GOTO (1700,1800), CASE
C  MUSN'T GO LEFT OR UP OR RIGHT
 1460	IF (DOWN) GOTO 1800
C  CAN'T GO ANYWHERE, SO GROW A NEW BRANCH
	GOTO 1950
C
C  GO LEFT
C
 1560	J = J - 1
	WALLS(I,J) = 2
	GOTO 1900
C
C  GO UP
C
 1630	I = I - 1
	WALLS(I,J) = 1
	GOTO 1900
C
C  GO RIGHT
C
 1700	IF (WALLS(I,J).EQ.0) GOTO 1750
	WALLS(I,J) = 3
	GOTO 1760
 1750	WALLS(I,J) = 2
 1760	J = J + 1
	GOTO 1900
C
C  GO DOWN
C
 1800	IF (WALLS(I,J).EQ.0) GOTO 1850
	WALLS(I,J) = 3
	GOTO 1860
 1850	WALLS(I,J) = 1
 1860	IF (I.EQ.ILIM) GOTO 1920
	I = I + 1
C  MARK THE LOCATION AS "VISITED"
 1900	COUNT = COUNT + 1
	BEENTO(I,J) = .TRUE.
	GOTO 660
C  CREATE AN EXIT, THEN START SCANNING IN TOP-LEFT CORNER
 1920	EXIT = .TRUE.
	I = ILIM
	J = JLIM
C  GROW A NEW BRANCH
 1950	IF (J.EQ.JLIM) GOTO 1960
	J = J + 1
	GOTO 1990
 1960	IF (I.EQ.ILIM) GOTO 1970
	I = I + 1
	GOTO 1980
 1970	I = 1
 1980	J = 1
 1990	IF (BEENTO(I,J)) GOTO 660
	GOTO 1950
C
C  CHECK THAT AN EXIT HAS BEEN MADE
C
 2020	IF (EXIT) GOTO 2050
	J = CHOICE(JLIM)
	WALLS(ILIM,J) = WALLS(ILIM,J) + 1
C
C  PRINT OUT THE MAZE
C
 2050	DO 2190 I = 1,ILIM
	DO 2090 J = 1,JLIM
	IF (WALLS(I,J).LT.2) GOTO 2080
	ROW(J) = PATRN3
	GOTO 2090
 2080	ROW(J) = PATRN4
 2090	CONTINUE
	WRITE(1,9100) PATRN4,(ROW(J),J=1,JLIM)
C
	DO 2170 J = 1,JLIM
	IF ((WALLS(I,J).EQ.0).OR.(WALLS(I,J).EQ.2)) GOTO 2160
	ROW(J) = PATRN2
	GOTO 2170
 2160	ROW(J) = PATRN1
 2170	CONTINUE
	WRITE(1,9100) PATRN2,(ROW(J),J=1,JLIM)
 2190	CONTINUE
	WRITE(1,9090)
C
C  RETURN FOR ANOTHER GO
C
	GOTO 150
C
	END
