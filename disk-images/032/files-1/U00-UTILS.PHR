function ConstStr(C : Char; N : Integer) : MaxPhraseSize;
var
  S : MaxPhraseSize;
begin
  if N < 0 then
    N := 0;
  S[0] := Chr(N);
  FillChar(S[1],N,C);
  ConstStr := S;
end;


Procedure SortIndexList;
var
  I,J,Min : integer;
  Temp    : IndexRec;
Begin
  for I:=1 to MaxRec-1 do
  begin
    Min:=I;
    for J:=I+1 to MaxRec do
      if KList[J].Key < Klist[Min].Key then
        Min:=J;
    Temp:=KList[I];
    KList[I]:=Klist[Min];
    KList[Min]:=Temp;
  end;
End; {of SortIndexList}


Procedure MakeIndex;
var
 error : integer;
begin
  assign(Dfile,labeldrive+FileName);
  {$I-} reset(Dfile); {$I+}
  error:= ioresult;
  if error<>0 then
  begin
   if error=153 then
   begin
     erase(Dfile);
     assign(Dfile,labeldrive+FileName);
   end;
   rewrite(Dfile);
   MaxRec:=0;
   Rec.NumRecs:=0;
   write(Dfile,Rec);
   FillChar(KList,Sizeof(KList),0);
  end
  else
  begin
   seek(Dfile,0);
   read(Dfile,Rec);
   MaxRec:=Rec.NumRecs;
   for i:=1 to maxrec do
   begin
    seek(Dfile,i);
    FillChar(Rec,SizeOf(Rec),0);
    read(Dfile,Rec);
    KList[i].Key:=Rec.Key;
    KList[i].Num:=i;
   end;
   SortIndexList;
  end;
end; {of MakeIndex}


Function FindKey(Key : KeyType) : Integer;
Var
  L, R, Mid : Integer;
begin
  L:=1; R:=MaxRec;
  repeat
    Mid:=(L+R) DIV 2;
    If Key < KList[Mid].Key
     then R:=Mid-1
     else L:=Mid+1;
  until (Key=KList[Mid].Key) or (L>R);
  if Key=KList[Mid].Key
    then FindKey:=Mid
    else FindKey:=-1
end; {of FindKey}

Procedure PutNewRecord;
begin
   seek(Dfile,MaxRec);
   write(Dfile,Rec);
   KList[MaxRec].Key:=Rec.Key;
   KList[MaxRec].Num:=MaxRec;
   SortIndexList;
end;

Procedure CloseFile;
begin
  Seek(Dfile,0);
  FillChar(Rec,Sizeof(Rec),0);
  Rec.NumRecs:=MaxRec;
  write(Dfile,Rec);
  close(Dfile);
end;



PROCEDURE getinput(maxnum : integer;
                ac,dn : integer;
                VAR line : MaxPhraseSize;
                kind : char;
                VAR fin : boolean;
                start : integer);

label exit;

const Underscore = '_';

var
    inst,dec,done : boolean;
    pos, xadj, yadj : integer;

procedure printchar;
begin
 if pos<=maxnum then
 begin
     if length(line)=maxnum then
       delete(line,maxnum,1);
     if inst=TRUE then
      insert(ans,line,pos)
     else
     begin
      if pos>length(line) then
       line:=line+' ';
      line[pos]:=ans;
     end;
     gotoxy(ac,dn);write(line,ConstStr(Underscore,Maxnum-length(line)));
     IF pos<maxnum THEN
       pos:=succ(pos);
 end;
end;

BEGIN
 dec:=FALSE; inst:=TRUE;
 for pos:=1 to length(line) do
   if line[pos]='.' then
    dec:=TRUE;
 fin:=FALSE;
 done:=FALSE;
 up:=FALSE;
 down:=FALSE;
 if start>maxnum THEN start:=maxnum;
 ans:=' ';
 pos:=start;
 gotoxy(60,1);
 lowvideo;
 write('Insert= ',inst);
 normvideo;
 gotoxy(ac,dn);write(line,ConstStr(Underscore,Maxnum-length(line)));

 REPEAT
 if pos>80 then
 begin
   xadj:=80; yadj:=1;
 end
 else
 begin
   xadj:=0; yadj:=0;
 end;
 gotoxy(ac+pos-1-xadj,dn+yadj);read(kbd,ans);
 IF ans IN [esc,cul,cur,cup,cud,ins,del,cr,bs,ch,'?',^G,^A,^F,^V] THEN
   begin
     CASE ans OF
       esc : begin
              fin:=TRUE;
              goto exit;
             end;

      cr,'?' : begin
                done:=TRUE;
                goto exit;
               end;

    cup,cud : begin
              done:=true;
              IF (ans=cup)and(noup=FALSE) THEN
              begin
               up:=TRUE;
               goto exit;
              end;
              IF (ans=cud)and(nodown=FALSE) THEN
              begin
               down:=TRUE;
               goto exit;
              end;
              done:=FALSE;
             end;

       cul : IF pos>1 THEN
             begin
              pos:=pred(pos);
              gotoxy(ac+pos-1,dn);
             end;

       cur : IF pos<=length(line) THEN
              begin
                pos:=succ(pos);
                gotoxy(ac+pos-1,dn);
              end;

       ins : begin
                insert(' ',line,pos);
                gotoxy(ac,dn);
                write(line,ConstStr(Underscore,Maxnum-length(line)));
               end;

       del,^G : begin
                if line[pos]='.' then
                  dec:=FALSE;
                delete(line,pos,1);
                gotoxy(ac,dn);
                write(line,ConstStr(Underscore,Maxnum-length(line)));
               end;

        ch : begin
               write(ConstStr(Underscore,length(line)-pos+1));
               Delete(line,pos,maxnum);
             end;
        bs : IF pos<>1 THEN
              begin
                IF line[pos-1]='.' THEN
                  dec:=FALSE;
                delete(line,pos-1,1);
                gotoxy(ac,dn);
                write(line,ConstStr(Underscore,Maxnum-length(line)));
                pos:=pred(pos);
              end;
        ^A : pos:=1;
        ^F : pos:=length(line)+1;
        ^V : begin
              inst:=not inst;
              gotoxy(60,1);
              lowvideo;
              case inst of
                TRUE : write('Insert Mode');
                FALSE: write('Overwrite Mode');
              end; {of case}
              clreol;
              normvideo;
             end;
     end; {of CASE }
   end
 ELSE
 begin

 CASE kind OF

   'a' : IF ans IN [' '..'/',':'..'~'] THEN
             printchar;

   'n' : IF ans IN ['0'..'9','-','.'] THEN

           Case ans of
             '0'..'9' :  printchar;

             '-' :  IF pos=1 THEN printchar;

             '.' : IF not dec THEN
                   begin
                    printchar;
                    dec:=TRUE;
                   end;
           end; {of case}

  'b' : IF ans IN [' '..'~'] THEN
                printchar;

  'c' : IF ans IN [' '..'~'] THEN
         begin
           IF ans IN ['a'..'z'] THEN
            ans:=chr(ord(ans)-$20);
           printchar;
         end;

  's' : IF ans IN ['A'..'Z','0'..'9','a'..'z','%','.',':','-',' ','/'] THEN
         begin
           IF ans IN ['a'..'z'] THEN
            ans:=chr(ord(ans)-$20);
           printchar;
         end;

 end; {of case}
 end;
exit:
UNTIL fin or done;

Case ans of
cup,cud :   IF ((ans=cup)and(noup=FALSE))or((ans=cud)and(nodown=FALSE))THEN
              done:=TRUE;

       esc : begin
               fin:=TRUE;
             end;

       '?' : IF kind='n' THEN
              query:=TRUE
             ELSE
             IF kind IN ['a'..'c'] THEN
             printchar;
 end;  {of case}
 gotoxy(60,1);clreol;
END; {of getinput}
