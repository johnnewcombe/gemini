;TITLE('ICOS-80 (C) D.R.BACK.1981')
;NAME CCP
;
;*****************************
;CONSOLE COMMAND PROCESSOR. CCP
;******************************
;
BASE EQU 0
BIAS EQU 0A800H
BDOS EQU 5	;REQUIRES FUNCTION NO. IN C AT ENTRY
CDISK EQU 4	;.CURRENT DEFAULT DRIVE
;
TPA EQU 100H+BASE
;
CR EQU 0DH
LF EQU 0AH
;
ORG 3400H+BIAS
;
	LXI SP,3C00H+BIAS
	MVI C,32	;SET USER CODE=0
	MVI E,0
	CALL BDOS
PRMPT:	LDA CDISK
	PUSH PSW	;SAVE DEFAULT DRIVE
	MVI C,13	;RESET DISK SYSTEM
	CALL BDOS
	POP PSW
	STA CDISK
	ADI 'A'
	STA PRMT+2	;CURRENT DRIVE
	MVI C,9		;PRINT PROMPT
	LXI D,PRMT
	CALL BDOS
	MVI C,10	;READ CONSOLE
	LXI D,CONBUF
	CALL BDOS
	LXI H,CONBUF	;TEST FOR OVERFLOW
	LDA CONSIZ
	CMP M
	JZ PRMPT
	MVI C,36	;CLEAR DEFAULT FCB
	XRA A
	LXI H,BASE+5CH
	CALL CLEAR
	MVI C,33	;CLEAR CCPFCB
	XRA A
	LXI H,CCPFCB
	CALL CLEAR
	LXI D,CCPFCB	;GET COMMAND TO CCPFCB
	LXI H,CONBUF+2
	CALL LDFCB
	RAR
	JC BDFLNM
	LXI D,BASE+5CH	;GET 1ST FILENAME TO FCB
	LHLD IBFPNT
	SHLD MOVPNT	;SAVE START OF COMMAND TAIL
	CALL LDFCB
	RAR
	JNC OK1
BDFLNM:	MVI C,9
	LXI D,INVALF
	CALL BDOS
	JMP PRMPT
OK1:	LXI D,BASE+6CH	;GET 2ND FILENAME TO FCB
	LHLD IBFPNT
	CALL LDFCB
	RAR
	JC BDFLNM
	CALL MOVE	;COMMAND TAIL TO DEFAULT BUFFER
	XRA A		;BRANCH TO COMMAND
	STA WDCNT
	LXI H,BLTIN
	SHLD BLTPNT
COMP1:	LXI D,CCPFCB
	INX D		;IGNORE DRIVE CODE
	XRA A
	STA CHRCNT
COMP2:	LDAX D
	CMP M
	JZ COMP3
	LXI B,LENGTH
	LHLD BLTPNT
	DAD B
	SHLD BLTPNT
	LDA WDCNT
	INR A
	STA WDCNT
	CPI NCMDS
	JNZ COMP1
	JMP OPNCOM
COMP3:	INX H
	INX D
	LDA CHRCNT
	INR A
	STA CHRCNT
	CPI LENGTH
	JNZ COMP2
	LDA WDCNT
	MOV L,A
	MVI H,0
	DAD H
	LXI B,BLTBAS
	DAD B
	MOV A,M
	INX H
	MOV H,M
	MOV L,A
	PCHL
;
BLTBAS:	DW SAVE
	DW DIR
	DW DELET
	DW TYPE
	DW REN
	DW LOGIN
NCMDS EQU ($-BLTBAS)/2
;
;***********BUILT IN COMMANDS******************
;
SAVE:	CALL CNVBN	;SYNTAX	SAVE N FILE.EXT
	JNC BDFLNM	;BIN IN A
	ORA A
	JZ PRMPT	;SAVE 0 IS ILLEGAL
	MOV H,A
	MVI L,0
	SHLD LENTH
	CALL HLFMOV
	LXI D,CCPFCB
	CALL AMBGTS	;MUST NOT BE AMBIG
	RAR
	JC PRMPT
	MVI C,19	;DELETE
	CALL BDOS
	LXI D,CCPFCB
	MVI C,22	;MAKE
	CALL BDOS
	INR A
	JZ DSKFL
	LXI H,TPA
	SHLD STRT
WRTDMA:	XCHG
	MVI C,26	;SETDMA
	CALL BDOS
	LXI D,CCPFCB
	MVI C,21	;WRITE SEQUENTIAL
	CALL BDOS
	ORA A
	JNZ DSKFL
	LHLD LENTH
	LXI D,80H
	CALL DSUB
	SHLD LENTH
	JZ CLS
	LHLD STRT
	LXI B,80H
	DAD B
	SHLD STRT
	JMP WRTDMA
CLS:	LXI D,CCPFCB
	MVI C,16	;CLOSE
	CALL BDOS
	INR A
	JZ NTFER
	JMP PRMPT
DSKFL:	LXI D,DSKFLM
	MVI C,9
	CALL BDOS
	JMP PRMPT
;
DIR:	LXI H,BASE+6DH
	MOV A,M
	STA SYSDIS	;SWITCH TO DISPLAY S FILES
	LXI H,BASE+5CH	;SYNTAX	DIR [FILENAME] [I]
	PUSH H
	INX H
	MOV A,M		;BLANK FILENAME CHECK
	CPI ' '
	JNZ DIR4
	POP H
	PUSH H
	INX H
	MVI C,11
	MVI A,'?'	;FILL FCB WITH '?'
DIR3:	MOV M,A
	INX H
	DCR C
	JNZ DIR3
DIR4:	POP H
	LDA CDISK
	STA DSKTMP
	XRA A
	CMP M
	JNZ FCBDR
	LDA CDISK
	MOV E,A
	JMP DRVS
FCBDR:	MOV E,M
	DCR E
DRVS:	MVI C,14	;SELECT DRIVE
	CALL BDOS
	MOV A,L
	ORA H
	JZ PRMPT
	PUSH H		;SAVE .DPHD
	LDA DSKTMP
	MOV E,A
	MVI C,14
	CALL BDOS	;RESTORE DEFAULT
	MOV A,L
	ORA H
	POP H
	JZ PRMPT
	LXI B,8
	DAD B
	MOV E,M
	INX H
	MOV D,M
	INX H
	MOV C,M
	INX H
	MOV B,M
	PUSH B		;BC=.DPBLK
	XCHG
	SHLD CONCPY	;.DIRBUF
	XCHG
	MVI C,26
	CALL BDOS	;SETDMA TO .DIRBUF
	POP D
	LXI H,5
	DAD D
	MOV E,M
	INX H
	MOV D,M
	INX H
	PUSH H
	INX H
	INX H
	MOV B,M		;ALLOC0
	INX H
	MOV C,M		;ALLOC1
DIR1:	XRA A
	MOV A,C
	RAL
	MOV C,A
	MOV A,B
	RAL
	MOV B,A
	JNC DIR6
	DCX D
	JMP DIR1
DIR6:	INX D
	XCHG
	SHLD VALUE
	LXI H,DSKSZ+7
	SHLD BUFADR
	CALL CONV
	POP H
	MOV E,M
	INX H
	MOV D,M
	INX D
	XCHG
	SHLD VALUE
	LXI H,FILS+7
	SHLD BUFADR
	CALL CONV
	CALL NXTL	;CLEAR COL COUNT
	MVI C,17	;SFIRST
	LXI D,BASE+5CH
	CALL BDOS
DIR0:	CPI 0FFH
	JZ DIR5
	CALL DIRCPY
	MVI C,18	;SNEXT
	LXI D,BASE+5CH
	CALL BDOS
	JMP DIR0
DIR5:	LDA COLCNT
	ORA A
	CNZ NXTL
	LXI H,0
	SHLD VALUE	;INIT SIZE=0
	SHLD NFILES	;INIT NO.OF FILES=0
	MVI C,12
	MVI A,'?'
	LXI H,BASE+5DH
	CALL CLEAR
	MVI C,17
	LXI D,BASE+5CH
	CALL BDOS	;SFIRST
TSEN:	CPI 0FFH
	JZ WRSZ
	LHLD NFILES
	INX H
	SHLD NFILES
	CALL DIRAD
	LXI B,16
	DAD B
	XCHG		;DE=START OF ALLOC
	LHLD VALUE
TRYNXT:	LDAX D		;WORKS ONLY IF DSM<=255
	ORA A		;I.E. 1 BYTE BLOCK ALLOC
	JZ NOADD
	INX H
NOADD:	INX D
	DCR C
	JNZ TRYNXT
	SHLD VALUE
	MVI C,18
	LXI D,BASE+5CH
	CALL BDOS	;SNEXT
	JMP TSEN
WRSZ:	LXI H,DSKSZ+2
	SHLD BUFADR
	CALL CONV	;USED ALLOC
	LHLD NFILES
	SHLD VALUE
	LXI H,FILS+2
	SHLD BUFADR
	CALL CONV	;NO. OF FILES
	MVI C,9		;WRITE DISK USAGE
	LXI D,FILS
	CALL BDOS
	JMP PRMPT
;
DELET:	LXI D,BASE+5CH	;SYNTAX	DELETE FILE.EXT
	MVI C,19
	CALL BDOS
	INR A
	JZ NTFER
	JMP PRMPT
;
TYPE:	LXI D,BASE+5CH	;SYNTAX	TYPE FILE.EXT
	CALL AMBGTS	;MAY NOT BE AMGIG
	RAR
	JC PRMPT
	MVI C,15	;OPEN
	CALL BDOS
	INR A
	JZ NTFER
NXTRD:	LXI D,BASE+5CH
	MVI C,20	;READ SEQUENTIAL
	CALL BDOS
	ORA A
	JNZ PRMPT
	LXI H,BASE+80H
	MVI C,128
CONL:	PUSH H
	PUSH B
	MOV A,M
	CPI 1AH		;^Z
	JZ ENDF
	MOV E,A
	MVI C,2
	CALL BDOS
	POP B
	POP H
	INX H
	DCR C
	JNZ CONL
	JMP NXTRD
ENDF:	POP B
	POP H
	JMP PRMPT
;
REN:	CALL HLFMOV	;SYNTAX RENAME OLDFILE NEWFILE
	LXI D,CCPFCB	;DOES NEWFILE EXIST
	CALL AMBGTS	;MAY NOT BE AMBIG
	RAR
	JC PRMPT
	MVI C,15	;OPEN
	CALL BDOS
	INR A
	JNZ FEXIST
	LXI D,BASE+5CH
	CALL AMBGTS	;MAY NOT BE AMBIG
	RAR
	JC PRMPT
	MVI C,23	;RENAME
	CALL BDOS
	INR A
	JNZ PRMPT
	JMP NTFER
FEXIST:	LXI D,EXIST
	MVI C,9
	CALL BDOS
	JMP PRMPT
;
LOGIN:	LXI H,CCPFCB	;SYNTAX	DRIVE:
	MOV A,M
	ORA A
	JZ PRMPT
	DCR A
	MOV E,A
	MVI C,14
	CALL BDOS
	JMP PRMPT
;
OPNCOM:	LXI H,CCPFCB+9	;TEST FOR BLANK EXTENSION
	MVI C,3
	MVI A,' '
NULT:	CMP M
	JNZ BDFLNM	;INVALID FILENAME
	INX H
	DCR C
	JNZ NULT
	LXI H,CCPFCB+9	;ADD 'COM'
	MVI M,'C'
	INX H
	MVI M,'O'
	INX H
	MVI M,'M'
	LXI D,CCPFCB	;OPEN COMMAND FILE
	MVI C,15
	CALL BDOS
	INR A
	JNZ RDSEQ
NTFER:	MVI C,9
	LXI D,NOTFND
	CALL BDOS
	JMP PRMPT
;*************TRANSIENT COMMANDS***************
RDSEQ:	LXI D,TPA	;SET DMA TO TPA
	PUSH D
SDM:	MVI C,26
	CALL BDOS
	LXI D,CCPFCB
	MVI C,20	;LOAD COMMAND FILE
	CALL BDOS
	ORA A
	JNZ EOF
	LXI H,80H
	POP D
	DAD D
	XCHG
	PUSH D
	JMP SDM
EOF:	POP D
	MVI C,26
	LXI D,80H
	CALL BDOS	;SET DMA TO DEFAULT
	CALL TPA
	JMP PRMPT
;
;********CCP SUBROUTINES**********
CLEAR:	MOV M,A
	INX H
	DCR C
	JNZ CLEAR
	RET
;===================-
HLFMOV:	LXI H,BASE+6CH	;MOVE HALF FCB TO CCPFCB
	LXI D,CCPFCB
	MVI C,16
	CALL MOVL
	RET
;===================
;BYTE MOVER HL=.SOURCE DE=.DEST C=COUNT
MOVL:	MOV A,M
	STAX D
	INX H
	INX D
	DCR C
	RZ
	JMP MOVL
;======================
MOVE:	MVI A,0FFH
	LHLD MOVPNT
	LXI D,BASE+80H
	STAX D		;SET LENGTH TO 0
	INX D
MOV1:	MOV A,M
	STAX D
	MOV C,A
	LDA BASE+80H
	INR A
	STA BASE+80H
	CPI 7FH
	RZ
	MOV A,C
	CPI CR
	RZ
	CPI LF
	RZ
	INX H
	INX D
	JMP MOV1
;=========================
;HL=.SOURCE DE=.FCB
;ACCEPTS CP/M OR ISIS FILENAMES AND DEVICES
;RETURNS A=0 IF OK ELSE A=FF
LDFCB:	XRA A
	STA ISW
	CMA
	STA FSTSW
	SHLD IBFPNT	;FIRST CHAR OF SOURCE
	XCHG
	SHLD FCBST	;.FCB
	CALL CLRFCB
	MVI C,8		;MAX CHAR COUNT
NXTCHR:	LHLD IBFPNT
	MOV A,M
	CPI 60H
	JC UPP
	SUI 20H
UPP:	CALL DELTS	;TEST FOR DELIMITER
	JZ DEL
	CALL TERMTS	;TEST FOR TERMINATOR
	JC DEL
	CPI ':'
	JZ COLON
	CPI '.'
	JZ DOT
	CPI '*'
	JZ STAR
	LHLD FCBPNT
	MOV M,A		;STORE CHAR IN FCB
	INX H
	SHLD FCBPNT
	XRA A
	STA FSTSW
	DCR C		;CHAR COUNT
	JM INVAL
INCBUF:	LHLD IBFPNT
	INX H
	SHLD IBFPNT
	JMP NXTCHR
DEL:	MOV B,A
	LDA FSTSW
	RAR
	JNC VAL
	MOV A,B
	CALL TERMTS
	JC VAL
	JMP INCBUF
DOT:	LDA FSTSW
	RAR
	JC INVAL
	MVI C,3
	LXI D,9
	LHLD FCBST
	DAD D
	SHLD FCBPNT
	JMP INCBUF
PASS:	CALL CLRFCB
	MVI C,0
	JMP INCBUF
COLON:	LDA FSTSW
	RAR
	JC COLON1
	LHLD FCBST
	INX H
	LDA ISW
	RAR
	MOV A,M
	JNC CPMFIL
	CPI 'F'
	JNZ PASS
	INX H
	MOV A,M
	CPI '0'
	JC INVAL
	CPI '5'+1	;DRIVES 0 TO 5 VALID
	JNC INVAL
	SUI 2FH
COLON2:	LHLD FCBST
	MOV M,A
	CALL CLRFCB
	MVI C,8
	JMP INCBUF
CPMFIL:	MOV A,C		;CHAR COUNT
	CPI 6
	JC PASS
	MOV A,M
	CPI 'A'
	JC INVAL
	CPI 'Q'		;DRIVES A TO P ARE VALID
	JNC INVAL
	SUI 40H
	JMP COLON2
COLON1:	XRA A
	CMA
	STA ISW
	JMP INCBUF
STAR:	MVI B,'?'
	MOV A,C		;CHARCNT
	CPI 8
	JZ FNAM
	CPI 3
	JNZ INVAL
	LXI D,9
	LHLD FCBST
	DAD D
	SHLD FCBPNT
	CALL STRBST
	JMP INCBUF
FNAM:	LHLD FCBST
	INX H
	SHLD FCBPNT
	CALL STRBST
	JMP INCBUF
STRBST:	LHLD FCBPNT
	MOV M,B
	INX H
	SHLD FCBPNT
	DCR C
	JNZ STRBST
	XRA A
	STA FSTSW
	RET
INVAL:	XRA A
	CMA
	RET
VAL:	XRA A
	RET
;==================
;REQUIRES A=CHAR
;RETURNS Z IF DELIMITER
DELTS:	CPI ' '
	RZ
	CPI 9H		;TAB
	RZ
	CPI ','
	RZ
	CPI '='
	RZ
	CPI '<'
	RZ
	CPI '['
	RET
;=================
;CY SET=TERMINATOR
TERMTS:	CPI ' '
	RC
	CPI 7BH
	CMC
	RET
;=====================
CLRFCB:	LHLD FCBST
	INX H
	SHLD FCBPNT
	MVI C,11
	MVI A,' '
	CALL CLEAR
	RET
;====================
;TEST FOR AMBIGUOUS OR NULL FILENAME
;REQUIRES DE=.FCB
;RETURNS 0=UNAMBIG  FF=AMBIG
AMBGTS:	PUSH D
	INX D
	LDAX D
	DCX D
	CPI ' '
	JZ AMBG2
	MVI C,12
AMBG1:	LDAX D
	CPI '?'
	JZ AMBG2
	INX D
	DCR C
	JNZ AMBG1
	POP D
	XRA A
	RET
AMBG2:	LXI D,INVALF
	MVI C,9
	CALL BDOS
	POP D
	XRA A
	CMA
	RET
;========================
DIRAD:	LHLD CONCPY	
	ADD A
	ADD A
	ADD A
	ADD A
	ADD A
	MOV E,A
	MVI D,0
	DAD D
	RET
;==============================-
DIRCPY:	CALL DIRAD	;FORMAT DIRBUF TO CONSOLE
	XCHG
	LXI H,9
	DAD D		;WR PROT BIT
	MOV A,M
	ANI 80H
	STA WPRBIT
	INX H
	MOV A,M
	ANI 80H
	STA SYSBIT
	XCHG
	MVI C,0
NXTCH:	XRA A
	CMP C
	MOV A,M
	JNZ NOTFST
	CPI 0E5H
	RZ
	LDA SYSDIS
	CPI 'I'
	JZ NFS
	LDA SYSBIT
	ORA A
	RNZ
NFS:	MOV A,M
NOTFST:	PUSH H
	ANI 7FH
	CPI ' '
	JNC PRNTNG
	MVI A,' '
PRNTNG:	MOV E,A
	CALL ECHO
	INR C
	MOV A,C
	CPI 9
	JNZ NODOT
	MVI E,'.'
	CALL ECHO
	MOV A,C
NODOT:	CPI 12
	POP H
	JZ NXTLIN
	INX H
	JMP NXTCH
NXTLIN:	CALL TAB
	LDA WPRBIT
	MVI E,'W'
	ORA A
	JNZ WP
	MVI E,' '
WP:	CALL ECHO
	LDA SYSBIT
	MVI E,'S'
	ORA A
	JNZ SY
	MVI E,' '
SY:	CALL ECHO
	LDA COLCNT
	CPI 65
	JNC NXTL
	CALL TAB
	RET
NXTL:	MVI E,CR
	CALL ECHO
	MVI E,LF
	CALL ECHO
	XRA A
	STA COLCNT
	RET
;====================
ECHO:	PUSH B
	MVI C,2
	CALL BDOS
	LXI H,COLCNT
	INR M
	POP B
	RET
;====================
TAB:	LDA COLCNT
	ANI 7
	RZ
	MVI E,' '
	CALL ECHO
	JMP TAB
;=====================
;BIN TO ASCII
CONV:	LXI H,I
	MVI M,1
CONV1:	MVI A,4		;SIZE
	CMP M
	RC
	LDA I
	DCR A
	JZ A1
	LHLD VALUE
	MOV A,L
	ORA H
	JNZ A1
	MVI A,' '
	JMP A2
A1:	LHLD VALUE
	XCHG
	LXI H,10	;BASE
	CALL AP0029
	XCHG
	SHLD VALUE
	LXI H,'0'
	DAD D
	MOV A,L
	CPI '9'+1
	JC A2
	ADI 7
A2:	MOV E,A
	LXI H,I
	MVI A,4		;SIZE
	SUB M
	MOV C,A
	MVI B,0
	LHLD BUFADR
	DAD B
	MOV M,E
	LXI H,I
	INR M
	JMP CONV1
;========================
AP0029:	MOV B,H
	MOV C,L
AP0030:	LXI H,0
	MVI A,16
	PUSH PSW
	DAD H
	XCHG
	SUB A
	DAD H
	XCHG
	ADC L
	SUB C
	MOV L,A
	MOV A,H
	SBB B
	MOV H,A
	INX D
	JNC $+5
	DAD B
	DCX D
	POP PSW
	DCR A
	JNZ $-14H
	RET
;========================
;CONVERT ASCII NUMBER AT BASE+5DH TO BIN
;RETURNS A=BIN  CY SET IF OK
CNVBN:	XRA A
	MOV B,A
	LXI D,BASE+5DH
	MVI C,4		;MAX PERMITTED DIGITS
NXTDIG:	LDAX D
	CPI ' '
	JZ CNVFIN
	CPI '0'
	JC CONVER
	CPI ':'
	JNC CONVER
	SUI '0'
	MOV L,A
	MOV A,B
	ADD A
	MOV H,A
	ADD A
	ADD A
	ADD H
	ADD L
	MOV B,A
	INX D
	DCR C
	JNZ NXTDIG
CONVER:	XRA A		;CLEAR CY
	RET
CNVFIN:	MOV A,B
	STC
	RET
;=========================
;DOUBLE SUBTRACT HL:=HL-DE
;Z & CY ARE SET FOR RESULT
DSUB:	MOV A,L
	SUB E
	MOV L,A
	MOV A,H
	SBB D
	MOV H,A
	RNZ
	INR L
	DCR L
	RET
;================================
;
PRMT:	DB CR,LF,'X>','$'
INVALF:	DB 'INVALID FILENAME',CR,LF,'$'
NOTFND:	DB 'NOT FOUND',CR,LF,'$'
EXIST:	DB 'FILE EXISTS',CR,LF,'$'
DSKFLM:	DB 'DISK FULL',CR,LF,'$'
FILS:	DB CR,LF,'    /     FILES'
DSKSZ:	DB CR,LF,'    /     BLOCKS USED',CR,LF,'$'
;
BLTIN:	DB 'SAVE   '
	DB '    '
LENGTH EQU $-BLTIN
	DB 'DIR    '
	DB '    '
	DB 'DELETE '
	DB '    '
	DB 'TYPE   '
	DB '    '
	DB 'RENAME '
	DB '    '
	DB '           '
CONBUF:	DB CONLEN
CONSIZ:	DS 1
CONLIN:	DS 128
CONLEN EQU $-CONSIZ
MOVPNT:	DS 2
ISW:	DS 1		;ISIS NAME SWITCH
FSTSW:	DS 1
FCBST:	DS 2
FCBPNT:	DS 2
IBFPNT:	DS 2
WDCNT:	DS 1
CHRCNT:	DS 1
BLTPNT:	DS 2
CCPFCB:	DS 33
CONCPY:	DS 2
LENTH:	DS 2
STRT:	DS 2
DSKTMP:	DS 1
NFILES:	DS 2		;NO. OF FILES
SYSDIS:	DS 1		;S DISPLAY SWITCH
WPRBIT:	DS 1		;WRITE PROTECT BIT
SYSBIT:	DS 1		;SYSTEM BIT
COLCNT:	DS 1		;COLUMN COUNT
;
I:	DS 1		;CONV VARIABLE
BUFADR:	DS 2		;.BUFFER FOR CONV O/P
VALUE:	DS 2		;2 BYTE VALUE FOR CONV
;
;SPACE FOR CCP STACK
;
END

		;CONV VARIABLE
BUFADR:	DS 2		;.BUFFER FOR CONV O/P
VALUE:	DS 2		;2 BYTE VALUE FOR CONV
;
;SPAC