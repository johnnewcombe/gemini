;     COPYRIGHT (c) 1981 ELECTRONIC ACCOUNTING SERVICES.
;PROGRAM TO READ A FILE AND SEND IT TO THE LIST DEVICE AFTER
;EXPANDING TABS TO EVERY EIGTH COLUMN.
;OUTPUT TO BE PAGINATED ON THE THE BASIS OF 60 LINES OF TEXT
;PER PAGE FOLLOWED BY 6 BLANK LINES.
;THE PROGRAM AS IT STANDS USES A BUFFER OF 16K THIS MAY HOWEVER
;BY CHANGING THE APPROPRIATE EQUATES.
;
;
BDOS	EQU	0005H		;BDOS ENTRY POINT
TPA	EQU	0100H		;BASE OF TPA
DMA	EQU	1100H		;ADDRESS FOR DIRECT MEMORY ACCESS
TCOUNT	EQU	10B0H		;LOCATION OF TAB COUNTER
LCOUNT	EQU	10C0H		;LOCATION OF LINE COUNTER
STACK	EQU	1050H		;USER STACK AREA
FCB	EQU	005CH		;ADDRESS OF FILE CONTROL BLOCK 1
SECTOR	EQU	128		;NUMBER OF BYTES IN SECTOR
NSECT	EQU	128		;NUMBER OF SECTORS IN BUFFER
SDMA	EQU	1AH		;BDOS FUNCTION 26
OPEN	EQU	0FH		;BDOS FUNCTION 15
READ	EQU	14H		;BDOS FUNCTION 20
LIST	EQU	05H		;BDOS FUNCTION 5
CONSTAT	EQU	06H		;BDOS FUNCTION 6
CLOSE	EQU	10H		;BDOS FUNCTION 16
EOF	EQU	1AH		;CPM END OF FILE (^Z)
TAB	EQU	09H		;TAB ASCII CONTROL I
CR	EQU	13		;ASCII CARRIAGE RETURN
LF	EQU	10		;ASCII LINE FEED
FF	EQU	0CH		;ASCII FORM FEED
SPACE	EQU	20H		;ASCII SPACE
;
;
;
	ORG	TPA
	LXI	SP,STACK	;SET LOCAL STACK AREA
	MVI	A,00H
	STA	TCOUNT		;INITIALISE TAB COUNTER
	STA	LCOUNT		;INITIALISE LINE COUNTER
;
;OPEN FILE SPECIFIED IN COMMAND LINE
;
OPEN1	LXI	D,FCB
	MVI	C,OPEN
	CALL	BDOS		;FUNCTION 15
	CPI	0FFH
	JZ	ABORT		;IF NO MATCH ABORT
	MVI	B,00H		;LOAD COUNT WITH ZERO
SDMA1	LXI	D,DMA
	PUSH	D		;SAVE DMA ADDRESS ON STACK
	MVI	C,SDMA
	CALL	BDOS		;FUNCTION 26
;
;READ OPENED FILE INTO 16K BUFFER
;
READ1	INR	B
	PUSH	B		;SAVE SECTOR COUNT ON STACK
	LXI	D,FCB
	MVI	C,READ
	CALL	BDOS		;FUNCTION 20
	CPI	00H
	JNZ	FLAG		;IF REAL END OF FILE JUMP OUT OF LOOP
SDMA2	POP	B
	POP	H		;GET PRESENT ADDRESS FOR DMA
	MVI	E,SECTOR	;LOAD SECTOR SIZE INTO LO BYTE OF DE
	MVI	D,00H		;LOAD ZERO INTO HI BYTE OF DE
	DAD	D		;ADD SECTOR OFFSET TO CURRENT DMA
	PUSH	H		;SAVE NEW DMA ADDRESS ON STACK
	PUSH	B
	XCHG			;SWAP REGISTERS HL AND DE
	MVI	C,SDMA
	CALL	BDOS		;FUNCTION 26
	POP	B		;GET PRESENT VALUE OF COUNT FROM STACK
	MOV	A,B
	CPI	NSECT
	JNZ	READ1		;IF = NUMBER OF SECTORS LOOP
	JMP	COMPAR
FLAG	POP	B		;GET COUNT FROM STACK
	DCR	B		;DECREMENT COUNT AS REAL EOF
;
;SEND 16K BUFFER TO LIST DEVICE
;
COMPAR	PUSH	B		;SAVE COUNT ON STACK
	LXI	H,DMA		;HL-START OF DATA BLOCK
LOOP2	MVI	D,SECTOR	;COUNT FOR INNER LOOP
LOOP1	MOV	A,M		;GET BYTE
	ANI	7FH		;SET BIT 7 TO 0
	CPI	EOF
	JZ	CLOSE1		;IF CPM EOF CLOSE FILE
	CALL	LCHAR		;SEND CHARACTER TO LIST DEVICE
COUNT	INX	H
	DCR	D
	JNZ	LOOP1		;INNER LOOP
	DCR	B
	JNZ	LOOP2		;OUTER LOOP
	POP	B		;LOAD CONTINUE FLAG
	MOV	A,B
	CPI	NSECT
	JZ	SDMA1		;IF NOT REAL EOF LOOP BACK FOR NEW BLOK
CLOSE1	LXI	D,FCB
	MVI	C,CLOSE
	CALL	BDOS		;FUNCTION 16
ABORT	NOP
	JMP	0000H		;RETURN TO CPM
;
;SEND CHARACTER TO LIST DEVICE.SETTING LINE AND TAB COUNTERS AS
;APPROPRIATE AND EXPANDING TABS AND FORM FEEDS WHERE NECESSARY.
;
LCHAR	NOP
	PUSH	A
	PUSH	B
	PUSH	D
	PUSH	H		;SAVE ALL REGISTERS ON STACK
	CPI	FF
	JNZ	NFF
	CALL	FFEED		;FORM FEED CHARACTER
	POP	H
	POP	D
	POP	B
	POP	A		;RESTORE REGISTERS FROM STACK
	RET
NFF	CPI	CR
	JNZ	NOTCR
	CALL	LIST1		;SEND CARRIAGE RETURN
	MVI	E,0FFH
	MVI	C,CONSTAT	;CHECK IF KEY PRESSED
	CALL	BDOS
	CPI	00H
	JNZ	CLOSE1		;IF KEY PRESSED ABORT
	MVI	A,00H
	STA	TCOUNT		;SET TAB COUNT TO ZERO
	LDA	LCOUNT
	INR	A		;INCREASE LINE COUNT
	CPI	61
	JNZ	NOTFF
	MVI	B,6		;SET COUNTER TO 6
LOOP3	PUSH	B
	MVI	A,LF		;SEND 6 LINE FEEDS TO LIST DEVICE
	CALL	LIST1
	POP	B
	DCR	B
	JNZ	LOOP3
	MVI	A,00H
NOTFF	STA	LCOUNT		;SET LINE COUNT
	POP	H
	POP	D
	POP	B
	POP	A		;RESTORE ALL REGISTERS FROM STACK
	RET
NOTCR	CPI	TAB
	JNZ	NOTAB
	CALL	ETAB		;EXPAND TABS TO EVERY 8TH COLUMN
	POP	H
	POP	D
	POP	B
	POP	A		;RESTORE ALL REGISTERS FROM STACK
	RET
NOTAB	CALL	LIST1		;SEND CHARACTER TO LIST DEVICE
	LDA	TCOUNT		;GET TAB COUNTER
	INR	A		;INCREMENT TAB COUNTER
	CPI	08H
	JNZ	NZTAB
	MVI	A,00H		;SET TAB COUNTER TO ZERO
NZTAB	STA	TCOUNT
	POP	H
	POP	D
	POP	B
	POP	A		;RESTORE ALL REGISTERS FROM STACK
	RET
LIST1	MOV	E,A
	MVI	C,LIST		;SEND CHARACTER TO LIST DEVICE
	CALL	BDOS
	RET
ETAB	LDA	TCOUNT		;TAB COUNTER TO ACCUMULATOR
	MOV	B,A
	MVI	A,08H
	SUB	B
	RZ
	MOV	B,A		;SET SPACE COUNTER IN REG B
LOOP4	PUSH	B
	MVI	A,SPACE
	CALL	LIST1		;SEND SPACES TO LIST DEVICE
	POP	B
	DCR	B
	JNZ	LOOP4
	MVI	A,00H
	STA	TCOUNT		;RESET TAB COUNTER TO ZERO
	RET
FFEED	LDA	LCOUNT		;LINE COUNTER TO ACCUMULATOR
	MOV	B,A
	MVI	A,42H		;LOAD ACCUMULATOR WITH 66
	SUB	B
	RZ
	MOV	B,A		;SET LINE FEED COUNTER IN REG B
LOOP5	PUSH	B
	MVI	A,LF
	CALL	LIST1		;SEND LINE FEEDS TO LIST DEVICE
	POP	B
	DCR	B
	JNZ	LOOP5
	MVI	A,00H
	STA	LCOUNT
	RET
